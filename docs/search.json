[
  {
    "objectID": "modeling_R.html",
    "href": "modeling_R.html",
    "title": "Demand Forecasting Model with R",
    "section": "",
    "text": "I chose to forecast at the SKU × Location level for several reasons:\n\nOperational relevance\n\nInventory and replenishment decisions are made at the store (location) and item (SKU) level. By forecasting precisely where and what to stock, we can minimize stock-outs and overstock.\n\nCaptures local demand patterns\n\nEach location has its own seasonality, promotions, and customer mix.\n\nSupports hierarchical consistency\n\nA bottom-up SKU×Location forecast can be aggregated automatically to Region or Family level views. That means our high-level dashboards always roll up correctly from the detailed forecasts driving operations.\n\nManages noise vs. scale\n\nWith only 3 SKUs and 10 locations (30 series total), it’s a manageable modeling effort. We get the benefit of detailed forecasts without an unmanageable number of models.\n\nFlexibility for enhancements\nWe can easily swap in covariates (e.g. price, promotions, local events) per SKU×Location, or test different algorithms (ARIMA, ETS, Prophet) on each series and still reconcile them back up.\n\nBy forecasting at the SKU × Location level, we ensure the most actionable, accurate, and consistent demand plans, while retaining the ability to roll up to any higher aggregation needed for reporting or strategic planning.\n\n1. Data Prepation\n\n\nCode\n# 0. Packages\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(modeltime)   # forecasting bridges tidymodels + prophet + ARIMA + ETS\nlibrary(timetk)      # time‐series toolkit\nlibrary(rsample)     # for resampling\nlibrary(parsnip)     # model specification\nlibrary(recipes)     # feature engineering\nlibrary(workflows)   # bundling recipe + model\nlibrary(yardstick)   # metrics\nlibrary(tsibble) \n\n# 1) Read & prep\ndf_monthly &lt;- read_csv(\"./data/df_monthly.csv\") |&gt;\n  select(month, Location = `Location ID`, SKU, quantity) |&gt;\n  group_by(month, Location, SKU) |&gt;\n  summarise(quantity = sum(quantity), .groups = \"drop\") |&gt;\n  mutate(month = yearmonth(month)) |&gt;\n  as_tsibble(key = c(Location, SKU), index = month) |&gt;\n  fill_gaps(quantity = 0L)\n\ndf &lt;- df_monthly |&gt;\n  select(month, Location, SKU, quantity) |&gt;\n  mutate(\n    ds = yearmonth(month) |&gt;  as.Date(),  # convert to Date at month‐start\n    y  = quantity\n  ) |&gt;\n  select(ds, y, Location, SKU)\n\n# 2) Nest by series\nnested_tbl &lt;- df |&gt; \n  group_by(Location, SKU) |&gt; \n  nest() |&gt; \n  ungroup()\n\n\n\n\n2. Model Training & Evaluation\n\n\nCode\nset.seed(123)\n\n# 3) Define a function to build a modeltime table per series\nmake_models &lt;- function(data_tbl) {\n\n  # a. Split train / test (last 6 months hold-out)\n  splits &lt;- initial_time_split(data_tbl, prop = (nrow(data_tbl) - 6) / nrow(data_tbl))\n\n  # b. Recipe (no extra features right now)\n  rec &lt;- recipe(y ~ ds, data = training(splits))\n  \n  # c. Model specs\n  arima_spec &lt;- arima_reg()      |&gt;  set_engine(\"auto_arima\")\n  ets_spec   &lt;- exp_smoothing()  |&gt;  set_engine(\"ets\")\n  prop_spec  &lt;- prophet_reg()    |&gt;  set_engine(\"prophet\")\n\n  # d. Workflows\n  wf_arima &lt;- workflow() |&gt;  add_model(arima_spec) |&gt;  add_recipe(rec)\n  wf_ets   &lt;- workflow() |&gt;  add_model(ets_spec)   |&gt;  add_recipe(rec)\n  wf_prop  &lt;- workflow() |&gt;  add_model(prop_spec)  |&gt;  add_recipe(rec)\n\n  # e. Modeltime table\n  modeltime_table(\n    arima = fit(wf_arima,  data = training(splits)),\n    ets   = fit(wf_ets,    data = training(splits)),\n    prop  = fit(wf_prop,   data = training(splits))\n  ) |&gt; \n    # f. Calibrate (generate forecasts on the test set)\n    modeltime_calibrate(new_data = testing(splits)) |&gt; \n    # g. Compute accuracy metrics\n    modeltime_accuracy() |&gt; \n    # h. Also embed the calibration object for later forecasting\n    left_join(\n      modeltime_table(\n        arima = fit(wf_arima,  data = training(splits)),\n        ets   = fit(wf_ets,    data = training(splits)),\n        prop  = fit(wf_prop,   data = training(splits))\n      ) |&gt;  modeltime_calibrate(new_data = testing(splits)) |&gt;  mutate(.model_desc = names(.model_id)),\n      by = \".model_id\"\n    )\n}\n\n# 4) Apply to each series\nresults_tbl &lt;- nested_tbl |&gt; \n  mutate(\n    metrics = map(data, make_models)\n  ) |&gt; \n  select(Location, SKU, metrics) |&gt; \n  unnest(metrics)\n\n# 5) Inspect accuracy\nbest_models &lt;- results_tbl |&gt; \n  group_by(Location, SKU) |&gt; \n  slice_min(rmse, n = 1) |&gt; \n  select(Location, SKU, .model_desc, mae, rmse, mase) |&gt; \n  distinct(Location, SKU, .keep_all = TRUE) \n\navg_month &lt;- df_monthly |&gt;\n  as.data.frame() |&gt;\n  group_by(Location, SKU) |&gt;\n  mutate(\n    avg_month = mean(quantity)\n  ) |&gt;\n  select(Location, SKU, avg_month) |&gt;\n  unique()\n\nbest_models &lt;- best_models |&gt;\n  left_join(\n    avg_month, by = c('Location', 'SKU')\n  )\n\nDT::datatable(best_models)\n\n\n\n\n\n\n\n\n3. Final Forecasting\n\n\nCode\n# 6) Re-nest for final forecasting\nforecast_tbl &lt;- nested_tbl |&gt; \n  left_join(\n    results_tbl |&gt; \n      group_by(Location, SKU) |&gt; \n      slice_min(rmse, n = 1) |&gt; \n      select(Location, SKU, .model_id),\n    by = c(\"Location\",\"SKU\")\n  ) |&gt; \n  distinct(Location, SKU, .keep_all = TRUE) |&gt; \n  mutate(\n    # 1) build a 3-row modeltime_table for each series, and tag rows with .model_id = 1,2,3\n    model_tbl = map(data, function(df) {\n      rec      &lt;- recipe(y ~ ds, data = df)\n      wf_arima &lt;- workflow() |&gt; \n                    add_model(arima_reg() |&gt;  set_engine(\"auto_arima\")) |&gt; \n                    add_recipe(rec)\n      wf_ets   &lt;- workflow() |&gt; \n                    add_model(exp_smoothing() |&gt;  set_engine(\"ets\")) |&gt; \n                    add_recipe(rec)\n      wf_prop  &lt;- workflow() |&gt; \n                    add_model(prophet_reg() |&gt;  set_engine(\"prophet\")) |&gt; \n                    add_recipe(rec)\n\n      modeltime_table(\n        arima = fit(wf_arima, df),\n        ets   = fit(wf_ets,   df),\n        prop  = fit(wf_prop,  df)\n      ) #|&gt; \n      #rowid_to_column(var = \".model_id\")\n    }),\n\n    # 2) pick the chosen row by .model_id\n    model = map2(model_tbl, .model_id, ~ slice(.x, .y)),\n\n    # 3) refit that model on _all_ the data, then forecast 6 months out\n    final_model = map2(model, data, ~ modeltime_refit(.x, data = .y))#,\n    #forecast    = map(final_model,     ~ modeltime_forecast(.x, h = \"6 months\"))\n  )\n\nforecast_tbl2 &lt;- forecast_tbl |&gt; \n  mutate(\n    # Re-calibrate each final_model on its own data\n    calib_full = map2(final_model, data, ~ modeltime_calibrate(.x, new_data = .y)),\n\n    # Now you *can* use `h = \"6 months\"`, but you MUST also give it `actual_data`\n    forecast = map2(\n      calib_full, data,\n      ~ modeltime_forecast(.x,\n          h           = \"6 months\",\n          actual_data = .y\n      )\n    )\n  )\n\n\n\nLocation 0001Location 0002Location 0003Location 0004Location 0005Location 0006Location 0007Location 0008Location 0009Location 0010\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_1 = forecast_tbl2 |&gt; \n  subset(Location == '0001' & SKU =='Alpha')\n \nalpha_1 = alpha_1$forecast |&gt;\n  as.data.frame()\n\nalpha_1_xts &lt;- xts(\n  x = alpha_1[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_1$.index\n)\n\ndygraph(alpha_1_xts, main = \"Forecast with 95% CI - Alpha*0001\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_1 = forecast_tbl2 |&gt; \n  subset(Location == '0001' & SKU =='Beta')\n \nbeta_1 = beta_1$forecast |&gt;\n  as.data.frame()\n\nbeta_1_xts &lt;- xts(\n  x = beta_1[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_1$.index\n)\n\ndygraph(beta_1_xts, main = \"Forecast with 95% CI - Beta*0001\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_1 = forecast_tbl2 |&gt; \n  subset(Location == '0001' & SKU =='Gamma')\n \ngamma_1 = gamma_1$forecast |&gt;\n  as.data.frame()\n\ngamma_1_xts &lt;- xts(\n  x = gamma_1[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_1$.index\n)\n\ndygraph(gamma_1_xts, main = \"Forecast with 95% CI - Gamma*0001\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_2 = forecast_tbl2 |&gt; \n  subset(Location == '0002' & SKU =='Alpha')\n \nalpha_2 = alpha_2$forecast |&gt;\n  as.data.frame()\n\nalpha_2_xts &lt;- xts(\n  x = alpha_2[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_2$.index\n)\n\ndygraph(alpha_2_xts, main = \"Forecast with 95% CI - Alpha*0002\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_2 = forecast_tbl2 |&gt; \n  subset(Location == '0002' & SKU =='Beta')\n \nbeta_2 = beta_2$forecast |&gt;\n  as.data.frame()\n\nbeta_2_xts &lt;- xts(\n  x = beta_2[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_2$.index\n)\n\ndygraph(beta_2_xts, main = \"Forecast with 95% CI - Beta*0002\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_2 = forecast_tbl2 |&gt; \n  subset(Location == '0002' & SKU =='Gamma')\n \ngamma_2 = gamma_2$forecast |&gt;\n  as.data.frame()\n\ngamma_2_xts &lt;- xts(\n  x = gamma_2[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_2$.index\n)\n\ndygraph(gamma_2_xts, main = \"Forecast with 95% CI - Gamma*0002\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_3 = forecast_tbl2 |&gt; \n  subset(Location == '0003' & SKU =='Alpha')\n \nalpha_3 = alpha_3$forecast |&gt;\n  as.data.frame()\n\nalpha_3_xts &lt;- xts(\n  x = alpha_3[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_3$.index\n)\n\ndygraph(alpha_3_xts, main = \"Forecast with 95% CI - Alpha*0003\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_3 = forecast_tbl2 |&gt; \n  subset(Location == '0003' & SKU =='Beta')\n \nbeta_3 = beta_3$forecast |&gt;\n  as.data.frame()\n\nbeta_3_xts &lt;- xts(\n  x = beta_3[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_3$.index\n)\n\ndygraph(beta_3_xts, main = \"Forecast with 95% CI - Beta*0003\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_3 = forecast_tbl2 |&gt; \n  subset(Location == '0003' & SKU =='Gamma')\n \ngamma_3 = gamma_3$forecast |&gt;\n  as.data.frame()\n\ngamma_3_xts &lt;- xts(\n  x = gamma_3[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_3$.index\n)\n\ndygraph(gamma_3_xts, main = \"Forecast with 95% CI - Gamma*0003\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_4 = forecast_tbl2 |&gt; \n  subset(Location == '0004' & SKU =='Alpha')\n \nalpha_4 = alpha_4$forecast |&gt;\n  as.data.frame()\n\nalpha_4_xts &lt;- xts(\n  x = alpha_4[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_4$.index\n)\n\ndygraph(alpha_4_xts, main = \"Forecast with 95% CI - Alpha*0004\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_4 = forecast_tbl2 |&gt; \n  subset(Location == '0004' & SKU =='Beta')\n \nbeta_4 = beta_4$forecast |&gt;\n  as.data.frame()\n\nbeta_4_xts &lt;- xts(\n  x = beta_4[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_4$.index\n)\n\ndygraph(beta_4_xts, main = \"Forecast with 95% CI - Beta*0004\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_4 = forecast_tbl2 |&gt; \n  subset(Location == '0004' & SKU =='Gamma')\n \ngamma_4 = gamma_4$forecast |&gt;\n  as.data.frame()\n\ngamma_4_xts &lt;- xts(\n  x = gamma_4[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_4$.index\n)\n\ndygraph(gamma_4_xts, main = \"Forecast with 95% CI - Gamma*0004\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_5 = forecast_tbl2 |&gt; \n  subset(Location == '0005' & SKU =='Alpha')\n \nalpha_5 = alpha_5$forecast |&gt;\n  as.data.frame()\n\nalpha_5_xts &lt;- xts(\n  x = alpha_5[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_5$.index\n)\n\ndygraph(alpha_5_xts, main = \"Forecast with 95% CI - Alpha*0005\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_5 = forecast_tbl2 |&gt; \n  subset(Location == '0005' & SKU =='Beta')\n \nbeta_5 = beta_5$forecast |&gt;\n  as.data.frame()\n\nbeta_5_xts &lt;- xts(\n  x = beta_5[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_5$.index\n)\n\ndygraph(beta_5_xts, main = \"Forecast with 95% CI - Beta*0005\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_5 = forecast_tbl2 |&gt; \n  subset(Location == '0005' & SKU =='Gamma')\n \ngamma_5 = gamma_5$forecast |&gt;\n  as.data.frame()\n\ngamma_5_xts &lt;- xts(\n  x = gamma_5[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_5$.index\n)\n\ndygraph(gamma_5_xts, main = \"Forecast with 95% CI - Gamma*0005\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_6 = forecast_tbl2 |&gt; \n  subset(Location == '0006' & SKU =='Alpha')\n \nalpha_6 = alpha_6$forecast |&gt;\n  as.data.frame()\n\nalpha_6_xts &lt;- xts(\n  x = alpha_6[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_6$.index\n)\n\ndygraph(alpha_6_xts, main = \"Forecast with 95% CI - Alpha*0006\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_6 = forecast_tbl2 |&gt; \n  subset(Location == '0006' & SKU =='Beta')\n \nbeta_6 = beta_6$forecast |&gt;\n  as.data.frame()\n\nbeta_6_xts &lt;- xts(\n  x = beta_6[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_6$.index\n)\n\ndygraph(beta_6_xts, main = \"Forecast with 95% CI - Beta*0006\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_6 = forecast_tbl2 |&gt; \n  subset(Location == '0006' & SKU =='Gamma')\n \ngamma_6 = gamma_6$forecast |&gt;\n  as.data.frame()\n\ngamma_6_xts &lt;- xts(\n  x = gamma_6[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_6$.index\n)\n\ndygraph(gamma_6_xts, main = \"Forecast with 95% CI - Gamma*0006\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_7 = forecast_tbl2 |&gt; \n  subset(Location == '0007' & SKU =='Alpha')\n \nalpha_7 = alpha_7$forecast |&gt;\n  as.data.frame()\n\nalpha_7_xts &lt;- xts(\n  x = alpha_7[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_7$.index\n)\n\ndygraph(alpha_7_xts, main = \"Forecast with 95% CI - Alpha*0007\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_7 = forecast_tbl2 |&gt; \n  subset(Location == '0007' & SKU =='Beta')\n \nbeta_7 = beta_7$forecast |&gt;\n  as.data.frame()\n\nbeta_7_xts &lt;- xts(\n  x = beta_7[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_7$.index\n)\n\ndygraph(beta_7_xts, main = \"Forecast with 95% CI - Beta*0007\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_7 = forecast_tbl2 |&gt; \n  subset(Location == '0007' & SKU =='Gamma')\n \ngamma_7 = gamma_7$forecast |&gt;\n  as.data.frame()\n\ngamma_7_xts &lt;- xts(\n  x = gamma_7[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_7$.index\n)\n\ndygraph(gamma_7_xts, main = \"Forecast with 95% CI - Gamma*0007\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_8 = forecast_tbl2 |&gt; \n  subset(Location == '0008' & SKU =='Alpha')\n \nalpha_8 = alpha_8$forecast |&gt;\n  as.data.frame()\n\nalpha_8_xts &lt;- xts(\n  x = alpha_8[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_8$.index\n)\n\ndygraph(alpha_8_xts, main = \"Forecast with 95% CI - Alpha*0008\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_8 = forecast_tbl2 |&gt; \n  subset(Location == '0008' & SKU =='Beta')\n \nbeta_8 = beta_8$forecast |&gt;\n  as.data.frame()\n\nbeta_8_xts &lt;- xts(\n  x = beta_8[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_8$.index\n)\n\ndygraph(beta_8_xts, main = \"Forecast with 95% CI - Beta*0008\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_8 = forecast_tbl2 |&gt; \n  subset(Location == '0008' & SKU =='Gamma')\n \ngamma_8 = gamma_8$forecast |&gt;\n  as.data.frame()\n\ngamma_8_xts &lt;- xts(\n  x = gamma_8[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_8$.index\n)\n\ndygraph(gamma_8_xts, main = \"Forecast with 95% CI - Gamma*0008\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_9 = forecast_tbl2 |&gt; \n  subset(Location == '0009' & SKU =='Alpha')\n \nalpha_9 = alpha_9$forecast |&gt;\n  as.data.frame()\n\nalpha_9_xts &lt;- xts(\n  x = alpha_9[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_9$.index\n)\n\ndygraph(alpha_9_xts, main = \"Forecast with 95% CI - Alpha*0009\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_9 = forecast_tbl2 |&gt; \n  subset(Location == '0009' & SKU =='Beta')\n \nbeta_9 = beta_9$forecast |&gt;\n  as.data.frame()\n\nbeta_9_xts &lt;- xts(\n  x = beta_9[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_9$.index\n)\n\ndygraph(beta_9_xts, main = \"Forecast with 95% CI - Beta*0009\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_9 = forecast_tbl2 |&gt; \n  subset(Location == '0009' & SKU =='Gamma')\n \ngamma_9 = gamma_9$forecast |&gt;\n  as.data.frame()\n\ngamma_9_xts &lt;- xts(\n  x = gamma_9[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_9$.index\n)\n\ndygraph(gamma_9_xts, main = \"Forecast with 95% CI - Gamma*0009\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nalpha_10 = forecast_tbl2 |&gt; \n  subset(Location == '0010' & SKU =='Alpha')\n \nalpha_10 = alpha_10$forecast |&gt;\n  as.data.frame()\n\nalpha_10_xts &lt;- xts(\n  x = alpha_10[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = alpha_10$.index\n)\n\ndygraph(alpha_10_xts, main = \"Forecast with 95% CI - Alpha*0010\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector() \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\nbeta_10 = forecast_tbl2 |&gt; \n  subset(Location == '0010' & SKU =='Beta')\n \nbeta_10 = beta_10$forecast |&gt;\n  as.data.frame()\n\nbeta_10_xts &lt;- xts(\n  x = beta_10[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = beta_10$.index\n)\n\ndygraph(beta_10_xts, main = \"Forecast with 95% CI - Beta*0010\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\nCode\nlibrary(xts)\nlibrary(dygraphs)\n\ngamma_10 = forecast_tbl2 |&gt; \n  subset(Location == '0010' & SKU =='Gamma')\n \ngamma_10 = gamma_10$forecast |&gt;\n  as.data.frame()\n\ngamma_10_xts &lt;- xts(\n  x = gamma_10[, c(\".value\", \".conf_lo\", \".conf_hi\")],\n  order.by = gamma_10$.index\n)\n\ndygraph(gamma_10_xts, main = \"Forecast with 95% CI - Gamma*0010\") |&gt;\n  dySeries(c(\".conf_lo\",\".value\", \".conf_hi\")) |&gt;\n  dyOptions(\n    drawPoints = TRUE,\n    pointSize   = 2,\n    strokeWidth = 2\n  ) |&gt;\n  dyAxis(\"y\", label = \"Demand\") |&gt;\n  dyRangeSelector()   \n\n\n\n\n\n\n\n\n\n\n\n4. Takeaways & Limitations"
  }
]