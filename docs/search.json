[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Demand Forecasting",
    "section": "",
    "text": "This project showcases my technical and analytical skills through the completion of a comprehensive data science assessment provided by IVADO Labs. required performing exploratory data analysis (EDA) and developing predictive models to generate demand forecasts for use in an inventory management solution.\nLeveraging my primary proficiency in R, I conducted a detailed EDA and built an initial forecasting model using established time-series techniques. To demonstrate flexibility and broaden the solution’s applicability, I then implemented an alternative forecasting approach in Python, allowing for a direct comparison between two differents forecasting models with their pros and cons.\n\n\n\nExploratory Data Analysis (EDA)\nData Preparation and Modeling\nDeployment: Package the model in a cross-platform, reproducible environment using Docker\n\n\n\n\n\nPredictive Modeling: Built a streamlined model pipeline using run and wicket data to predict performance metrics, emphasizing reproducibility and interpretability.\nReproducible Deployment: Leveraged containerization to ensure cross-platform usability, along with CLI tools for local execution.\n\nThis work demonstrates my ability to design end-to-end data solutions, leveraging my expertise in modeling and reproducible deployment. The methodology and results are detailed throughout this site to provide transparency and insight into my problem-solving approach."
  },
  {
    "objectID": "index.html#key-objectives",
    "href": "index.html#key-objectives",
    "title": "Demand Forecasting",
    "section": "",
    "text": "Exploratory Data Analysis (EDA)\nData Preparation and Modeling\nDeployment: Package the model in a cross-platform, reproducible environment using Docker"
  },
  {
    "objectID": "index.html#highlights",
    "href": "index.html#highlights",
    "title": "Demand Forecasting",
    "section": "",
    "text": "Predictive Modeling: Built a streamlined model pipeline using run and wicket data to predict performance metrics, emphasizing reproducibility and interpretability.\nReproducible Deployment: Leveraged containerization to ensure cross-platform usability, along with CLI tools for local execution.\n\nThis work demonstrates my ability to design end-to-end data solutions, leveraging my expertise in modeling and reproducible deployment. The methodology and results are detailed throughout this site to provide transparency and insight into my problem-solving approach."
  },
  {
    "objectID": "index.html#first-model-in-r",
    "href": "index.html#first-model-in-r",
    "title": "Demand Forecasting",
    "section": "First Model in R",
    "text": "First Model in R\nHere are my intermediate data after first cleaning :\n\nIntermediate data, in csv\n\nYou can show in details my code and explanation to went from raw data to that dataset here\nYou can also access the RScript directly on my GitHub repo - data_processing.R"
  },
  {
    "objectID": "index.html#second-model-in-python",
    "href": "index.html#second-model-in-python",
    "title": "Demand Forecasting",
    "section": "Second Model in Python",
    "text": "Second Model in Python\nWe’ve created a very basic and simple ML model to predict an average team’s expected runs per over. Find the code and explanation here\nYou can also access the RScript directly on my GitHub repo - data_modelling.R"
  },
  {
    "objectID": "eda_R.html",
    "href": "eda_R.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Below you will find an EDA of the data provided."
  },
  {
    "objectID": "eda_R.html#quantity-sold-per-month-per-store-all-products-combined",
    "href": "eda_R.html#quantity-sold-per-month-per-store-all-products-combined",
    "title": "Exploratory Data Analysis",
    "section": "5.1 Quantity Sold per month per store (all products combined)",
    "text": "5.1 Quantity Sold per month per store (all products combined)\n\n\nCode\ndf_hc_qty &lt;- df_monthly |&gt; \n    group_by(month, `Location ID`) |&gt; \n    mutate(\n        quantity = sum(quantity)\n    ) |&gt; \n    ungroup() |&gt; \n    select(month, `Location ID`, quantity) |&gt; \n    unique() |&gt; \n    mutate(month_ts = datetime_to_timestamp(month)) \n\nhc_loc &lt;- highchart(type = \"stock\") |&gt; \n  hc_title(text = \"Monthly Quantity by Location\") |&gt; \n  hc_xAxis(type = \"datetime\")\n\nfor(loc in unique(df_hc_qty$`Location ID`)) {\n  tmp &lt;- df_hc_qty |&gt; \n   filter(`Location ID` == loc)\n  hc_loc &lt;- hc_loc |&gt; \n    hc_add_series(\n      data = list_parse2(tibble(x = tmp$month_ts, y = tmp$quantity)),\n      name = loc,\n      type = \"line\"\n    )\n}\n\nhc_loc |&gt; \n  hc_legend(enabled = TRUE, align = \"center\", layout = \"horizontal\", verticalAlign = \"bottom\")"
  },
  {
    "objectID": "eda_R.html#quantity-sold-per-month-per-region-type-all-products-combined",
    "href": "eda_R.html#quantity-sold-per-month-per-region-type-all-products-combined",
    "title": "Exploratory Data Analysis",
    "section": "5.2 Quantity Sold per month per Region type (all products combined)",
    "text": "5.2 Quantity Sold per month per Region type (all products combined)\n\n\nCode\ndf_hc_qty &lt;- df_monthly |&gt; \n    group_by(month, `Region Type`) |&gt; \n    mutate(\n        quantity = sum(quantity)\n    ) |&gt; \n    ungroup() |&gt; \n    select(month, `Region Type`, quantity) |&gt; \n    unique() |&gt; \n    mutate(month_ts = datetime_to_timestamp(month)) \n\nhc_loc &lt;- highchart(type = \"stock\") |&gt; \n  hc_title(text = \"Monthly Quantity by Region Type\") |&gt; \n  hc_xAxis(type = \"datetime\")\n\nfor(loc in unique(df_hc_qty$`Region Type`)) {\n  tmp &lt;- df_hc_qty |&gt; \n   filter(`Region Type` == loc)\n  hc_loc &lt;- hc_loc |&gt; \n    hc_add_series(\n      data = list_parse2(tibble(x = tmp$month_ts, y = tmp$quantity)),\n      name = loc,\n      type = \"line\"\n    )\n}\n\nhc_loc |&gt; \n  hc_legend(enabled = TRUE, align = \"center\", layout = \"horizontal\", verticalAlign = \"bottom\")"
  },
  {
    "objectID": "eda_R.html#quantity-sold-per-month-per-surface-area-all-products-combined",
    "href": "eda_R.html#quantity-sold-per-month-per-surface-area-all-products-combined",
    "title": "Exploratory Data Analysis",
    "section": "5.3 Quantity Sold per month per Surface area (all products combined)",
    "text": "5.3 Quantity Sold per month per Surface area (all products combined)\n\n\nCode\ndf_hc_qty &lt;- df_monthly |&gt; \n    group_by(month, `Surface Area`) |&gt; \n    mutate(\n        quantity = sum(quantity)\n    ) |&gt; \n    ungroup() |&gt; \n    select(month, `Surface Area`, quantity) |&gt; \n    unique() |&gt; \n    mutate(month_ts = datetime_to_timestamp(month)) \n\nhc_loc &lt;- highchart(type = \"stock\") |&gt; \n  hc_title(text = \"Monthly Quantity by locations' surface area\") |&gt; \n  hc_xAxis(type = \"datetime\")\n\nfor(loc in unique(df_hc_qty$`Surface Area`)) {\n  tmp &lt;- df_hc_qty |&gt; \n   filter(`Surface Area` == loc)\n  hc_loc &lt;- hc_loc |&gt; \n    hc_add_series(\n      data = list_parse2(tibble(x = tmp$month_ts, y = tmp$quantity)),\n      name = loc,\n      type = \"line\"\n    )\n}\n\nhc_loc |&gt; \n  hc_legend(enabled = TRUE, align = \"center\", layout = \"horizontal\", verticalAlign = \"bottom\")"
  },
  {
    "objectID": "eda_R.html#quantity-sold-per-month-per-product-family",
    "href": "eda_R.html#quantity-sold-per-month-per-product-family",
    "title": "Exploratory Data Analysis",
    "section": "5.3 Quantity Sold per month per Product Family",
    "text": "5.3 Quantity Sold per month per Product Family\n\n\nCode\ndf_hc_qty &lt;- df_monthly |&gt; \n    group_by(month, `Product Family`) |&gt; \n    mutate(\n        quantity = sum(quantity)\n    ) |&gt; \n    ungroup() |&gt; \n    select(month, `Product Family`, quantity) |&gt; \n    unique() |&gt; \n    mutate(month_ts = datetime_to_timestamp(month)) \n\nhc_loc &lt;- highchart(type = \"stock\") |&gt; \n  hc_title(text = \"Monthly Quantity by Product Family\") |&gt; \n  hc_xAxis(type = \"datetime\")\n\nfor(loc in unique(df_hc_qty$`Product Family`)) {\n  tmp &lt;- df_hc_qty |&gt; \n   filter(`Product Family` == loc)\n  hc_loc &lt;- hc_loc |&gt; \n    hc_add_series(\n      data = list_parse2(tibble(x = tmp$month_ts, y = tmp$quantity)),\n      name = loc,\n      type = \"line\"\n    )\n}\n\nhc_loc |&gt; \n  hc_legend(enabled = TRUE, align = \"center\", layout = \"horizontal\", verticalAlign = \"bottom\")"
  }
]